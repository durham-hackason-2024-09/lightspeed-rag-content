# Backup and recovery for operator environments

Thank you for your interest in Red Hat Ansible Automation Platform. Ansible Automation Platform is a commercial offering that helps teams manage complex multi-tier deployments by adding control, knowledge, and delegation to Ansible-powered environments.
Use the procedures in this guide to create backup resources that can be used for recovering your Red Hat Ansible Automation Platform deployment in the event of a failure.

# Providing feedback on Red Hat documentation

If you have a suggestion to improve this documentation, or find an error, you can contact technical support at https://access.redhat.com to open a request.

# Backup and recovery of Red Hat Ansible Automation Platform

To safeguard against unexpected data loss and application errors, it is critical that you perform periodic backups of your Red Hat Ansible Automation Platform deployment. In addition to data loss prevention, backups allow you to fall back to a different deployment state.

## About backup and recovery

Red Hat recommends backing up deployments of Red Hat Ansible Automation Platform in your Red Hat OpenShift Container Platform environment to prevent data loss.

A backup resource of your Red Hat Ansible Automation Platform deployment includes the following:

* Custom deployment of specific values in the spec section of the Ansible Automation Platform custom resource object.
* Back up of the postgresql database.
* secret_key, admin_password, and broadcast_websocket secrets.
* Database configuration.


[NOTE]
----
Be sure to secure your backup resources because they can include sensitive information.
----

### Backup recommendations

Recovering from data loss requires that you plan for and create backup resources of your Red Hat Ansible Automation Platform deployments on a regular basis. At a minimum, Red Hat recommends backing up deployments of Red Hat Ansible Automation Platform under the following circumstances:

* Before upgrading your Red Hat Ansible Automation Platform deployments.
* Before upgrading your OpenShift cluster.
* Once per week. This is particularly important if your environment is configured for automatic upgrades.

# Creating Red Hat Ansible Automation Platform backup resources

Backing up your Red Hat Ansible Automation Platform deployment involves creating backup resources for your deployed instances.
Use the following procedures to create backup resources for your Red Hat Ansible Automation Platform deployment.
We recommend taking backups before upgrading the Ansible Automation Platform Operator.
Take a backup regularly in case you want to restore the platform to a previous state.

## Backing up your Ansible Automation Platform deployment

Regularly backing up your Ansible Automation Platform deployment is vital to protect against unexpected data loss and application errors. Ansible Automation Platform hosts any enabled components (such as, automation controller, automation hub, and Event-Driven Ansible), when you back up Ansible Automation Platform the operator will also back up these components.

* You must be authenticated on OpenShift cluster.
* You have installed Ansible Automation Platform Operator on the cluster.
* You have deployed a Ansible Automation Platform instance using the Ansible Automation Platform Operator.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Go to your All Instances tab, and click Create New.
5. Select Ansible Automation Platform Backup from the list.

[NOTE]
----
When creating the Ansible Automation Platform Backup resource it also creates backup resources for each of the nested components that are enabled.
----
6. In the Name field, enter a name for the backup.
7. In the Deployment name field, enter the name of the deployed Ansible Automation Platform instance being backed up. For example if your Ansible Automation Platform deployment must be backed up and the deployment name is aap, enter 'aap' in the Deployment name field.
8. Click Create.

This results in an AnsibleAutomationPlatformBackup resource. The  the resource YAML is similar to the following:


```
apiVersion: aap.ansible.com/v1alpha1
kind: AnsibleAutomationPlatformBackup
metadata:
  name: backup
  namespace: aap
spec:
  no_log: true
  deployment_name: aap
```


To verify that your backup was successful you can:

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Click All Instances.

The All Instances page displays the main backup and the backups for each component with the name you specified when creating your backup resource.
The status for the following instances must be either Running or Successful:

* AnsibleAutomationPlatformBackup
* AutomationControllerBackup
* EDABackup
* AutomationHubBackup

## Backing up the Automation controller deployment

Use this procedure to back up a deployment of the controller, including jobs, inventories, and credentials.

* You must be authenticated with an OpenShift cluster.
* You have installed Ansible Automation Platform Operator on the cluster.
* You have deployed automation controller using the Ansible Automation Platform Operator.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Select the Automation Controller Backup tab.
5. Click Create AutomationControllerBackup.
6. Enter a Name for the backup.
7. Enter the Deployment name of the deployed Ansible Automation Platform instance being backed up.
For example, if your automation controller must be backed up and the deployment name is aap-controller, enter 'aap-controller' in the Deployment name field.
8. If you want to use a custom, pre-created pvc:
1. [Optional]: enter the name of the Backup persistent volume claim.
2. [Optional]: enter the Backup PVC storage requirements, and Backup PVC storage class.

[NOTE]
----
If no pvc or storage class is provided, the cluster's default storage class is used to create the pvc.
----
3. If you have a large database, specify your storage requests accordingly under Backup management pod resource requirements.

[NOTE]
----
You can check the size of the existing postgres database data directory by running the following command inside the postgres pod.

```
$ df -h | grep "/var/lib/pgsql/data"
```

----
9. Click Create.

A backup tarball of the specified deployment is created and available for data recovery or deployment rollback. Future backups are stored in separate tar files on the same pvc.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator.
4. Select the AutomationControllerBackup tab.
5. Select the backup resource you want to verify.
6. Scroll to Conditions and check that the Successful status is True.

[NOTE]
----
If Successful is False, the backup has failed. Check the automation controller operator logs for the error to fix the issue.
----

## Using YAML to back up the Automation controller deployment

See the following procedure for how to back up a deployment of the automation controller using YAML.

* You must be authenticated with an OpenShift cluster.
* You have installed Ansible Automation Platform Operator on the cluster.
* You have deployed automation controller using the Ansible Automation Platform Operator.

1. Create a file named "backup-awx.yml" with the following contents:

```
---
apiVersion: automationcontroller.ansible.com/v1beta1
kind: AWXBackup
metadata:
  name: awxbackup-2024-07-15
  namespace: my-namespace
spec:
  deployment_name: controller
```


[NOTE]
----
The "deployment_name" above is the name of the automation controller deployment you intend to backup from.
The namespace above is the one containing the automation controller deployment you intend to back up.
----
2. Use the oc apply command to create the backup object in your cluster:

$ oc apply -f backup-awx.yml

## Backing up the Automation hub deployment

Use this procedure to back up a deployment of the hub, including all hosted Ansible content.

* You must be authenticated with an OpenShift cluster.
* You have installed Ansible Automation Platform Operator on the cluster.
* You have deployed automation hub using the Ansible Automation Platform Operator.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Select the Automation Hub Backup tab.
5. Click Create AutomationHubBackup.
6. Enter a Name for the backup.
7. Enter the Deployment name of the deployed Ansible Automation Platform instance being backed up.
For example, if your automation hub must be backed up and the deployment name is aap-hub, enter 'aap-hub' in the Deployment name field.
8. If you want to use a custom, pre-created pvc:
1. Optionally, enter the name of the Backup persistent volume claim, Backup persistent volume claim namespace, Backup PVC storage requirements, and Backup PVC storage class.
9. Click Create.

This creates a backup of the specified deployment and is available for data recovery or deployment rollback.

# Recovering a Red Hat Ansible Automation Platform deployment

If you lose information on your system or experience issues with an upgrade, you can use the backup resources of your deployment instances. Use the following procedures to recover your Ansible Automation Platform deployment files.

## Recovering your Ansible Automation Platform deployment

Ansible Automation Platform manages any enabled components (such as, automation controller, automation hub, and Event-Driven Ansible), when you recover Ansible Automation Platform you also restore these components.

In previous versions of the Ansible Automation Platform Operator, it was necessary to create a restore object for each component of the platform.
Now, you create a single AnsibleAutomationPlatformRestore resource, which  creates and manages the other restore objects:

* AutomationControllerRestore
* AutomationHubRestore
* EDARestore

* You must be authenticated with an OpenShift cluster.
* You have installed the Ansible Automation Platform Operator on the cluster.
* The AnsibleAutomationPlatformBackups deployment is available in your cluster.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Go to your All Instances tab, and click Create New.
5. Select Ansible Automation Platform Restore from the list.
6. For Name enter the name for the recovery deployment.
7. For New Ansible Automation Platform Name enter the new name for your Ansible Automation Platform instance.
8. Backup Source defaults to CR.
9. For Backup name enter the name your chose when creating the backup.
10. Click Create.

Your backups starts restoring under the AnsibleAutomationPlatformRestores tab.


[NOTE]
----
The recovery is not complete until all the resources are successfully restored. Depending on the size of your database this this can take some time.
----

To verify that your recovery was successful you can:

1. Go to .
2. Confirm that all pods are in a Running or Completed state.

## Recovering the Automation controller deployment

Use this procedure to restore a previous controller deployment from an AutomationControllerBackup. The deployment name you provide will be the name of the new AutomationController custom resource that will be created.


[NOTE]
----
The name specified for the new AutomationController custom resource must not match an existing deployment.
If the backup custom resource being restored is a backup of a currently running AutomationController custom resource the recovery process will fail. See Troubleshooting for steps to resolve the issue.
----

* You must be authenticated with an OpenShift cluster.
* You have deployed  automation controller on the cluster.
* An AutomationControllerBackup is available on a PVC in your cluster.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Select the Automation Controller Restore tab.
5. Click Create AutomationControllerRestore.
6. Enter a Name for the recovery deployment.
7. Enter a New Deployment name for the restored deployment.

[NOTE]
----
This must be different from the original deployment name.
----
8. Select the Backup source to restore from. Backup CR is recommended.
9. Enter the Backup Name of the AutomationControllerBackup object.
10. Click Create.

A new deployment is created and your backup is restored to it. This can take approximately 5 to 15 minutes depending on the size of your database.

1. Log in to Red Hat Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Select the AutomationControllerRestore tab.
5. Select the restore resource you want to verify.
6. Scroll to Conditions and check that the Successful status is True.

[NOTE]
----
If Successful is False, the recovery has failed. Check the automation controller operator logs for the error to fix the issue.
----

## Using YAML to recover the Automation controller deployment

See the following procedure for how to restore a deployment of the automation controller using YAML.

The external database must be a PostgreSQL database that is the version supported by the current release of Ansible Automation Platform.


[NOTE]
----
Ansible Automation Platform 2.5 supports PostgreSQL 15.
----

The external postgres instance credentials and connection information must be stored in a secret, which is then set on the automation controller spec.

1. Create a external-postgres-configuration-secret YAML file, following the template below:

```
apiVersion: v1
kind: Secret
metadata:
  name: external-restore-postgres-configuration
  namespace: <target_namespace> 1
stringData:
  host: "<external_ip_or_url_resolvable_by_the_cluster>" 2
  port: "<external_port>" 3
  database: "<desired_database_name>"
  username: "<username_to_connect_as>"
  password: "<password_to_connect_with>" 4
  sslmode: "prefer" 5
  type: "unmanaged"
type: Opaque
```

Namespace to create the secret in. This should be the same namespace you want to deploy to.
The resolvable hostname for your database node.
External port defaults to 5432.
Value for variable password should not contain single or double quotes (', ") or backslashes (\) to avoid any issues during deployment, backup or restoration.
The variable sslmode is valid for external databases only. The allowed values are: prefer, disable, allow, require, verify-ca, and verify-full.
2. Apply external-postgres-configuration-secret.yml to your cluster using the oc create command.

```
$ oc create -f external-postgres-configuration-secret.yml
```

3. When creating your AutomationControllerRestore custom resource object, specify the secret on your spec, following the example below:

```
kind: AutomationControllerRestore
apiVersion: automationcontroller.ansible.com/v1beta1
metadata:
  namespace: my-namespace
  name: awxrestore-2024-07-15
spec:
  deployment_name: restored_controller
  backup_name: awxbackup-2024-07-15
  postgres_configuration_secret: 'external-restore-postgres-configuration'
```


## Recovering the Automation hub deployment

Use this procedure to restore a previous hub deployment into the namespace. The deployment name you provide will be the name of the new AutomationHub custom resource that will be created.


[NOTE]
----
The name specified for the new AutomationHub custom resource must not match an existing deployment or the recovery process will fail.
----

* You must be authenticated with an OpenShift cluster.
* You have deployed automation hub on the cluster.
* An AutomationHubBackup is available on a PVC in your cluster.

1. Log in to Red Hat OpenShift Container Platform.
2. Navigate to .
3. Select your Ansible Automation Platform Operator deployment.
4. Select the Automation Hub Restore tab.
5. Click Create AutomationHubRestore.
6. Enter a Name for the recovery deployment.
7. Select the Backup source to restore from. Backup CR is recommended.
8. Enter the Backup Name of the AutomationHubBackup object.
9. Click Create.

This creates a new deployment and restores your backup to it.

# Troubleshooting

Use this information to diagnose and resolve issues during backup and recovery.

## Automation controller custom resource has the same name as an existing deployment

The name specified for the new AutomationController custom resource must not match an existing deployment or the recovery process will fail.

If your AutomationController customer resource matches an existing deployment, perform the following steps to resolve the issue.

1. Delete the existing AutomationController and the associated postgres PVC:

```
oc delete automationcontroller <YOUR_DEPLOYMENT_NAME> -n <YOUR_NAMESPACE>

oc delete pvc postgres-13-<YOUR_DEPLOYMENT_NAME>-13-0 -n <YOUR_NAMESPACE>
```

2. Use AutomationControllerRestore with the same deployment_name in it:

```
oc apply -f restore.yaml
```
