# Creating a container group

A ContainerGroup is a type of InstanceGroup that has an associated credential that enables you to connect to an OpenShift cluster.

* A namespace that you can launch into.
Every cluster has a "default" namespace, but you can use a specific namespace.
* A service account that has the roles that enable it to launch and manage pods in this namespace.
* If you are using execution environments in a private registry, and have a container registry credential associated with them in automation controller, the service account also needs the roles to get, create, and delete secrets in the namespace.
If you do not want to give these roles to the service account, you can pre-create the ImagePullSecrets and specify them on the pod spec for the ContainerGroup.
In this case, the execution environment must not have a container registry credential associated, or automation controller attempts to create the secret for you in the namespace.
* A token associated with that service account.
An OpenShift or Kubernetes Bearer Token.
* A CA certificate associated with the cluster.

The following procedure explains how to create a service account in an OpenShift cluster or Kubernetes, to be used to run jobs in a container group through automation controller.
After the service account is created, its credentials are provided to automation controller in the form of an OpenShift or Kubernetes API Bearer Token credential.

1. To create a service account, download and use the sample service account, containergroup sa and modify it as needed to obtain the credentials.
2. Apply the configuration from containergroup-sa.yml:

oc apply -f containergroup-sa.yml
3. Get the secret name associated with the service account:

export SA_SECRET=$(oc get sa containergroup-service-account -o json | jq '.secrets[0].name' | tr -d '"')
4. Get the token from the secret:

oc get secret $(echo ${SA_SECRET}) -o json | jq '.data.token' | xargs | base64 --decode > containergroup-sa.token
5. Get the CA certificate:

oc get secret $SA_SECRET -o json | jq '.data["ca.crt"]' | xargs | base64 --decode > containergroup-ca.crt
6. Use the contents of containergroup-sa.token and containergroup-ca.crt to provide the information for the OpenShift or Kubernetes API Bearer Token required for the container group.

To create a container group, create an OpenShift or Kubernetes API Bearer Token credential to use with your container group.
For more information, see Creating a credential.

1. From the navigation panel, select menu:Automation Execution[Infrastructure > Instance Groups].
2. Click btn:[Create group] and select Create container group.
3. Enter a name for your new container group and select the credential previously created to associate it to the container group.
4. Click btn:[Create Container Group].