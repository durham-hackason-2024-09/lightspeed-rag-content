# Managing playbooks using source control

Choose one of the following options when managing playbooks using source control:
* SCM Types - Configuring playbooks to use Git and Subversion
* SCM Type - Configuring playbooks to use Red Hat Insights
* SCM Type - Configuring playbooks to use a remote archive

# SCM Types - Configuring playbooks to use Git and Subversion

1. From the navigation panel, select menu:Automation Execution[Projects].
2. Click the project name you want to use.
3. In the project Details tab, click btn:[Edit project].
4. Select the appropriate option (Git or Subversion) from the Source Control Type menu.
5. Enter the appropriate details into the following fields:
* Source Control URL - See an example in the tooltip .
* Optional: Source Control Branch/Tag/Commit: Enter the SCM branch, tags, commit hashes, arbitrary refs, or revision number (if applicable) from the source control (Git or Subversion) to checkout.
Some commit hashes and references might not be available unless you also provide a custom refspec in the next field.
If left blank, the default is HEAD which is the last checked out Branch, Tag, or Commit for this project.
* Source Control Refspec - This field is an option specific to git source control and only advanced users familiar and comfortable with git should specify which references to download from the remote repository.
For more information, see Job branch overriding.
* Source Control Credential - If authentication is required, select the appropriate source control credential.
6. Optional: Options - select the launch behavior, if applicable:
* Clean - Removes any local modifications before performing an update.
* Delete - Deletes the local repository in its entirety before  performing an update.
Depending on the size of the repository this can significantly increase the amount of time required to complete an update.
* Track submodules - Tracks the latest commit. There is more information in the tooltip .
* Update Revision on Launch - Updates the revision of the project to the current revision in the remote source control, and caching the roles directory from Galaxy  or
Collections support.
Automation controller ensures that the local revision matches and that the roles and collections are up-to-date with the last update.
In addition, to avoid job overflows if jobs are spawned faster than the project can synchronize, selecting this enables you to configure a Cache Timeout to cache previous project synchronizations for a given number of seconds.
* Allow Branch Override - Enables a job template or an inventory source that uses this project to start with a specified SCM branch or revision other than that of the project.
For more information, see Job branch overriding.


7. Click btn:[Save project].


[TIP]
----
Using a GitHub link is an easy way to use a playbook.
To help get you started, use the helloworld.yml file available here.
This link offers a very similar playbook to the one created manually in the instructions found in Getting started with automation controller.
Using it will not alter or harm your system in any way.
----

# SCM Type - Configuring playbooks to use Red Hat Insights

1. From the navigation panel, select menu:Automation Execution[Projects].
2. Click the project name you want to use.
3. In the project Details tab, click btn:[Edit project].
4. Select Red Hat Insights from the Source Control Type menu.
5. In the Credential field, select the appropriate credential for use with Insights, as Red Hat Insights requires a credential for authentication.
6. Optional: In the Options field, select the launch behavior, if applicable:
* Clean - Removes any local modifications before performing an update.
* Delete - Deletes the local repository in its entirety before performing an update.
Depending on the size of the repository this can significantly increase the amount of time required to complete an
update.
* Update Revision on Launch - Updates the revision of the project to the current revision in the remote source control, and caches the
roles directory from Ansible Galaxy support or Collections support.
Automation controller ensures that the local revision matches, and that the roles and collections are up-to-date.
If jobs are spawned faster than the project can synchronize, selecting this enables you to configure a Cache Timeout to
cache previous project synchronizations for a certain number of seconds, to avoid job overflow.
7. Click btn:[Save project].

# SCM Type - Configuring playbooks to use a remote archive

Playbooks that use a remote archive enable projects to be based on a build process that produces a versioned artifact, or release,
containing all the requirements for that project in a single archive.

1. From the navigation panel, select menu:Automation Execution[Projects].
2. Click the project name you want to use.
3. In the project Details tab, click btn:[Edit project].
4. Select Remote Archive from the Source Control Type menu.
5. Enter the appropriate details into the following fields:
* Source Control URL - requires a URL to a remote archive, such as a GitHub Release or a build artifact stored in Artifactory and unpacks it into
the project path for use.
* Source Control Credential - If authentication is required, select the appropriate source control credential.
6. Optional: In the Options field, select the launch behavior, if applicable:
* Clean - Removes any local modifications before performing an update.
* Delete - Deletes the local repository in its entirety before performing an update.
Depending on the size of the repository this can significantly increase the amount of time required to complete an
update.
* Update Revision on Launch - Not recommended. This option updates the revision of the project to the current revision in the remote source control, and caches the roles directory from Ansible Galaxy support or Collections support.
* Allow Branch Override - Not recommended. This option enables a job template that uses this project to launch with a specified SCM branch or revision other than that of the project's.

[NOTE]
----
Since this source control type is intended to support the concept of unchanging artifacts, it is advisable to disable Galaxy integration (for roles, at a minimum).
----
7. Click btn:[Save project].