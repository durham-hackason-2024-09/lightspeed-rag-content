# Creating a job template

1. From the navigation panel, select menu:Automation Execution[Templates].
2. On the Templates page, select Create job template from the Create template list.
3. Enter the appropriate details in the following fields:

[NOTE]
----
If a field has the Prompt on launch checkbox selected, launching the job prompts you for the value for that field when launching.
Most prompted values override any values set in the job template.
Exceptions are noted in the following table.
----

4. You can set the following options for launching this template, if necessary:
* Privilege escalation: If checked, you enable this playbook to run as an administrator.
This is the equal of passing the --become option to the ansible-playbook command.
* Provisioning callback: If checked, you enable a host to call back to automation controller through the REST API and start a job from this job template.
For more information, see [ADD 2.5 LINK][Provisioning Callbacks].
* Enable webhook: If checked, you turn on the ability to interface with a predefined SCM system web service that is used to launch a job template.
GitHub and GitLab are the supported SCM systems.
* If you enable webhooks, other fields display, prompting for additional information:
* Webhook service: Select which service to listen for webhooks from.
* Webhook URL: Automatically populated with the URL for the webhook service to POST requests to.
* Webhook key: Generated shared secret to be used by the webhook service to sign payloads sent to automation controller.
You must configure this in the settings on the webhook service in order for automation controller to accept webhooks from this service.
* Webhook credential: Optionally, give a GitHub or GitLab personal access token (PAT) as a credential to use to send status updates back to the webhook service.

Before you can select it, the credential must exist.

See [ADD 2.5 LINK][Credential Types] to create one.
* For additional information about setting up webhooks, see [ADD 2.5 LINK][Working with Webhooks].
* Concurrent jobs: If checked, you are allowing jobs in the queue to run simultaneously if not dependent on one another. Check this box if you want to run job slices simultaneously. For more information, see [ADD 2.5 LINK][Automation controller capacity determination and job impact].
* Enable fact storage: If checked, automation controller stores gathered facts for all hosts in an inventory related to the job running.
* Prevent instance group fallback: Check this option to allow only the instance groups listed in the Instance Groups field to run the job.
If clear, all available instances in the execution pool are used based on the hierarchy described in Control where a job runs.
5. Click btn:[Create job template], when you have completed configuring the details of the job template.

Creating the template does not exit the job template page but advances to the Job Template Details tab.
After saving the template, you can click btn:[Launch template] to start the job.
You can also click btn:[Edit] to add or change the attributes of the template, such as permissions, notifications, view completed jobs, and add a survey (if the job type is not a scan).
You must first save the template before launching, otherwise, btn:[Launch template] remains disabled.

1. From the navigation panel, select menu:Automation Execution[Templates].
2. Verify that the newly created template appears on the Templates page.