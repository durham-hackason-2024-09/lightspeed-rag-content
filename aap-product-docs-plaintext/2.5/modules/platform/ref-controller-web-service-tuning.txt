# Web server tuning

Control and Hybrid nodes each serve the UI and API of automation controller. WSGI traffic is served by the uwsgi web server on a local socket. ASGI traffic is served by Daphne. NGINX listens on port 443 and proxies traffic as needed.

To scale automation controller&#8217;s web service, follow these best practices:

* Deploy multiple control nodes and use a load balancer to spread web requests over multiple servers.
* Set max connections per automation controller to 100.

To optimize automation controller&#8217;s web service on the client side, follow these guidelines:

* Direct user to use dynamic inventory sources instead of individually creating inventory hosts by using the API.
* Use webhook notifications instead of polling for job status.
* Use the bulk APIs for host creation and job launching to batch requests.
* Use token authentication. For automation clients that must make many requests very quickly, using tokens is a best practice, because depending on the type of user, there may be additional overhead when using basic authentication.

* For more information on workloads with high levels of API interaction, see Scaling Automation Controller for API Driven Workloads.
* For more information on bulk API, see Bulk API in Automation Controller.
* For more information on how to generate and use tokens, see Token-Based Authentication.