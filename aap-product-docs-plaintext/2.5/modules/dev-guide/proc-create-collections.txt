# Creating collections

You can create your own Collections locally with the Ansible Galaxy CLI tool. You can use the collection subcommand to activate the Collection-specific commands.

* You have Ansible-core version 2.15 or newer installed in your development environment.

1. In your terminal, go to where you want your namespace root directory to be. For simplicity, this should be a path in COLLECTIONS_PATH but that is not required.
2. Run the following command, replacing my_namespace and my_collection_name with your own values:

```
$ ansible-galaxy collection init <my_namespace>.<my_collection_name>
```


[NOTE]
----
Make sure you have the proper permissions to upload to a namespace by checking under the My Content tab on galaxy.ansible.com or console.redhat.com/ansible/automation-hub
----

The earlier command will create a directory named from the namespace argument (if one does not already exist) and then create a directory under that with the Collection name. Inside of that directory will be the default or "skeleton" Collection. This is where you can add your roles or plugins and start working on developing your own Collection.

In relation to execution environments, Collection developers can declare requirements for their content by providing the appropriate metadata in Ansible Builder.

Requirements from a Collection can be recognized in these ways:

* A file meta/execution-environment.yml, which references the Python or bindep requirements files.
* A file named requirements.txt, which includes information about the Python dependencies, and is sometimes found at the root level of the Collection.
* A file named bindep.txt, which includes system-level dependencies, and is sometimes found at the root level of the Collection.
* If any of these files are in the build_ignore of the Collection, Ansible Builder will not pick up on these. The build_ignore section filters any files or directories that should not be included in the build artifact.

Collection maintainers can verify that ansible-builder recognizes the requirements they expect by using the introspect command:


```
$ ansible-builder introspect --sanitize ~/.ansible/collections/
```


* For more information about creating collections, see Creating collections in the Ansible Developer Guide.