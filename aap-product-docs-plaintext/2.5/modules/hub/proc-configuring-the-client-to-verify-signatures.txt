# Configuring the client to verify signatures

To ensure a container image pulled from the remote registry is properly signed, you must first configure the image with the proper public key in a policy file.

* The client must have sudo privileges configured to verify signatures.

1. Open your terminal and use the following command:

```
>  sudo <name of editor> /etc/containers/policy.json
```


The file that is displayed is similar to this:

```
{
  "default": [{"type": "reject"}],
  "transports": {
  	"docker": {
    	"quay.io": [{"type": "insecureAcceptAnything"}],
    	"docker.io": [{"type": "insecureAcceptAnything"}],
    	"<server-address>": [
      	{
          	    "type": "signedBy",
          	    "keyType": "GPGKeys",
          	    "keyPath": "/tmp/containersig.txt"
      	}]
  	}
  }
}
```


This file shows that neither quay.io, or docker.io will perform the verification, because the type is insecureAcceptAnything which overrides the default type of reject. However, <server-address> will perform the verification, because the parameter type is set to "signedBy".

[NOTE]
----
The only keyType currently supported is GPG keys.
----
2. Under the <server-address> entry, modify the keyPath <1> to include the
name of your key file.

```
{
    	"default": [{"type": "reject"}],
    	"transports": {
        	"docker": {
          	  "quay.io": [{"type": "insecureAcceptAnything"}],
          	  "docker.io": [{"type": "insecureAcceptAnything"}],
          	  "<server-address>": [{
                	"type": "signedBy",
                	"keyType": "GPGKeys",
                	"keyPath": "/tmp/<key file name>",
                	"signedIdentity": {
                  	  "type": "matchExact"
                    }
            	  }]
            }
    	}
}
```

3. Save and close the file.

* Pull the file using Podman, or your client of choice:


```
> podman pull <server-address>/<container-name>:<tag name> --tls-verify=false
```


This response verifies the image has been signed with no errors. If the image is not signed, the command fails.

* For more information about policy.json, see documentation for containers-policy.json.