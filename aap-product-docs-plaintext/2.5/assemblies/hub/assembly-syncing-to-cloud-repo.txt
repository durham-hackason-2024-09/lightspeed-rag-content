# Configuring Ansible automation hub remote repositories to synchronize content

Use remote configurations to configure your private automation hub to synchronize with Ansible Certified Content Collections hosted on console.redhat.com or with your collections in Ansible Galaxy.

[IMPORTANT]
----
As of the 2.4 release you can still synchronize content, but synclists are deprecated, and will be removed in a future version.
To synchronize content, you can now upload a manually-created requirements file from the rh-certified remote.
Remotes are configurations that allow you to synchronize content to your custom repositories from an external collection source.
----
## Whatâ€™s the difference between Ansible Galaxy and Ansible automation hub?
Collections published to Ansible Galaxy are the latest content published by the Ansible community and have no joint support claims associated with them.
Ansible Galaxy is the recommended frontend directory for the Ansible community accessing content.
Collections published to Ansible automation hub are targeted for joint customers of Red Hat and selected partners.
Customers need an Ansible subscription to access and download collections on Ansible automation hub.
A certified collection means that Red Hat and partners have a strategic relationship in place and are ready to support joint customers, and may have had additional testing and validation done against them.
## How do I request a namespace on Ansible Galaxy?
To request a namespace through an Ansible Galaxy GitHub issue, follow these steps:
* Send an email to ansiblepartners@redhat.com
* Include the GitHub username used to sign up on Ansible Galaxy.
You must have logged in at least once for the system to validate.
After users are added as administrators of the namespace, you can use the self-serve process to add more administrators.
## Are there any restrictions for Ansible Galaxy namespace naming?
Collection namespaces must follow python module name convention.
This means collections should have short, all lowercase names.
You can use underscores in the collection name if it improves readability.

# Reasons to create remote configurations

Each remote configuration located in menu:Automation Content[Remotes] provides information for both the community and rh-certified repository about when the repository was last updated.
You can add new content to Ansible automation hub at any time using the Edit and Sync features included on the menu:MenuTopAC[Repositories] page.

# Retrieving the API token for your Red Hat Certified Collection

You can synchronize Ansible Certified Content Collections curated by your organization from console.redhat.com to your private automation hub.
The API token is a secret token used to protect your content.

* You have organization administrator permissions to create the synclist on console.redhat.com.

1. Log in to console.redhat.com as an organization administrator.
2. Navigate to menu:Automation Hub[Connect to Hub].
3. Under Offline token, click btn:[Load token].
4. Click btn:[Copy to clipboard] to copy the API token.
5. Paste the API token into a file and store in a secure location.

# Configuring the rh-certified remote repository and synchronizing Red Hat Ansible Certified Content Collection

You can edit the rh-certified remote repository to synchronize collections from automation hub hosted on console.redhat.com to your private automation hub.
By default, your private automation hub rh-certified repository includes the URL for the entire group of Ansible Certified Content Collections.

To use only those collections specified by your organization, a private automation hub administrator can upload manually-created requirements files from the rh-certified remote.

For more information about using requirements files, see Install multiple collections with a requirements file in the Using Ansible collections guide.

If you have collections A, B, and C in your requirements file, and a new collection X is added to console.redhat.com that you want to use, you must add X to your requirements file for private automation hub to synchronize it.

* You have valid Modify Ansible repo content permissions.
For more information on permissions, see Configuring user access for your private automation hub.
* You have retrieved the Sync URL and API Token from the automation hub hosted service on console.redhat.com.
* You have configured access to port 443. This is required for synchronizing certified collections. For more information, see the automation hub table in the Network ports and protocols chapter of the Red Hat Ansible Automation Platform Planning Guide.

1. Log in to your private automation hub.
2. From the navigation panel, select menu:Automation Content[Remotes].
3. In the rh-certified remote repository, click the btn:[More Actions] icon &#8942; and click btn:[Edit].
4. In the URL field, paste the Sync URL.
5. In the Token field, paste the token you acquired from console.redhat.com.
6. Click btn:[Save].

You can now synchronize collections between your organization synclist on console.redhat.com and your private automation hub.
7. Click the btn:[More Actions] icon &#8942; and select Sync.

The Sync status notification updates to notify you that the Red Hat Certified Content Collections synchronization is complete.

* Select Red Hat Certified from the collections content drop-down list to confirm that your collections content has synchronized successfully.

# Configuring the community remote repository and syncing Ansible Galaxy collections

You can edit the community remote repository to synchronize chosen collections from Ansible Galaxy to your private automation hub.
By default, your private automation hub community repository directs to galaxy.ansible.com/api/.

* You have Modify Ansible repo content permissions.
For more information on permissions, see Configuring user access for your private automation hub.
* You have a requirements.yml file that identifies those collections to synchronize from Ansible Galaxy as in the following example:
Requirements.yml example

```
collections:
  # Install a collection from Ansible Galaxy.
  - name: community.aws
    version: 5.2.0
    source: https://galaxy.ansible.com
```


1. Log in to automation hub.
2. From the navigation panel, select menu:Automation Content[Remotes].
3. In the Community remote, click the btn:[More Actions] icon &#8942; and select Edit.
4. In the YAML requirements field, click btn:[Browse] and locate the requirements.yml file on your local machine.
5. Click btn:[Save].

You can now synchronize collections identified in your requirements.yml file from Ansible Galaxy to your private automation hub.
6. Click the btn:[More Actions] icon &#8942; and select Sync to sync collections from Ansible Galaxy and Ansible automation hub.

The Sync status notification updates to notify you of completion or failure of Ansible Galaxy collections synchronization to your Ansible automation hub.

* Select Community from the collections content drop-down list to confirm successful synchronization.

# Configuring proxy settings

If your private automation hub is behind a network proxy, you can configure proxy settings on the remote to sync content located outside of your local network.

* You have valid Modify Ansible repo content permissions.
For more information on permissions, see Configuring user access for your private automation hub.
* You have a proxy URL and credentials from your local network administrator.

1. Log in to private automation hub.
2. From the navigation panel, select menu:Automation Content[Remotes].
3. In either the rh-certified or Community remote, click the btn:[More Actions] icon &#8942; and select Edit.
4. Expand the Show advanced options drop-down menu.
5. Enter your proxy URL, proxy username, and proxy password in the appropriate fields.
6. Click btn:[Save].