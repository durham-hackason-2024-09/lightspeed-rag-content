# Publishing an automation execution environment

# Customizing an existing automation execution environments image

Ansible Controller includes the following default execution environments:

* Minimal - Includes the latest Ansible-core 2.15 release along with Ansible Runner, but does not include collections or other content
* EE Supported - Minimal, plus all Red Hat-supported collections and dependencies

While these environments cover many automation use cases, you can add additional items to customize these containers for your specific needs. The following procedure adds the kubernetes.core collection to the ee-minimal default image:

1. Log in to registry.redhat.io via Podman:

```
$ podman login -u="[username]" -p="[token/hash]" registry.redhat.io
```

2. Ensure that you can pull the required automation execution environment base image:

```
podman pull registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel8:latest
```

3. Configure your Ansible Builder files to specify the required base image and any additional content to add to the new execution environment image.
1. For example, to add the Kubernetes Core Collection from Galaxy to the image, use the Galaxy entry:

```
collections:
  - kubernetes.core
```
2. For more information about definition files and their content, see the definition file breakdown section.
4. In the execution environment definition file, specify the original ee-minimal container's URL and tag in the EE_BASE_IMAGE field. In doing so, your final execution-environment.yml file will look like the following:
A customized execution-environment.yml file

```
version: 3

images:
  base_image: 'registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel9:latest'

dependencies:
  galaxy:
    collections:
      - kubernetes.core
```

[NOTE]
----
Since this example uses the community version of kubernetes.core and not a certified collection from automation hub, we do not need to create an ansible.cfg file or reference that in our definition file.
----
5. Build the new execution environment image by using the following command:

```
$ ansible-builder build -t [username]/new-ee
```


where [username] specifies your username, and new-ee specifies the name of your new container image.

[NOTE]
----
If you do not use -t with build, an image called ansible-execution-env is created and loaded into the local container registry.
----
* Use the podman images command to confirm that your new container image is in that list:
Output of a podman images command with the image new-ee

```
REPOSITORY          TAG     IMAGE ID      CREATED        SIZE
localhost/new-ee    latest  f5509587efbb  3 minutes ago  769 MB
```
6. Verify that the collection is installed:

```
$ podman run [username]/new-ee ansible-doc -l kubernetes.core
```

7. Tag the image for use in your automation hub:

```
$ podman tag [username]/new-ee [automation-hub-IP-address]/[username]/new-ee
```

8. Log in to your automation hub using Podman:

[NOTE]
----
You must have admin or appropriate container repository permissions for automation hub to push a container. For more information, see the Manage containers in private automation hub section in Managing content in automation hub.
----

```
$ podman login -u="[username]" -p="[token/hash]" [automation-hub-IP-address]
```

9. Push your image to the container registry in automation hub:

```
$ podman push [automation-hub-IP-address]/[username]/new-ee
```

10. Pull your new image into your automation controller instance:
1. Go to automation controller.
2. From the navigation panel, select menu:Automation Execution[Infrastructure > Execution Environments].
3. Click btn:[Add].
4. Enter the appropriate information then click btn:[Save] to pull in the new image.

[NOTE]
----
If your instance of automation hub is password or token protected, ensure that you have the appropriate container registry credential set up.
----

# Additional resources (or Next steps)

For more details on customizing execution environments based on common scenarios, see the following topics in the Ansible Builder Documentation:

* Copying arbitratory files to an execution enviornment
* Building execution environments with environment variables
* Building execution environments with environment variables and ansible.cfg