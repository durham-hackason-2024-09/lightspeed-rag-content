# Mapping

To control which users are allowed into the Ansible Automation Platform server, and placed into Ansible Automation Platform organizations or teams based on their attributes (like username and email address) or what groups they belong to, you can configure authenticator maps.
Authenticator maps allow you to add conditions that must be met before a user is given or denied access to a resource type. Authenticator maps are associated with an authenticator and are given an order. The maps are processed in order when the user logs in. These can be thought of like firewall rules or mail filters.

# Authenticator map types

Ansible Automation Platform supports the following rule types:

Allow:: Determine if the user is allowed to log into the system
Organization:: Determine if a user should be put into an organization
Team:: Determine if the user should be a member of a team
Role:: Determine if the user is a member of a role (for example System Auditor)
Is Superuser:: Determine if the user is a superuser in the system

These authentication map types can be used with any type of authenticator.

# Authenticator map triggers

Each map has a trigger that defines when the map should be evaluated as true. Trigger types include the following:

Always:: The trigger should always be invoked.
Never:: The trigger should never be invoked.
Group:: The trigger should be invoked based on a user having, not having, or having multiple groups in the source system.
Attribute:: The trigger should be invoked based on a user having some combination of attributes from the source system whose value might match, container, end with, etc. some value.

# Authenticator map examples

* Make this user a superuser if they have an attribute called aap_superuser with a value of True.
* Add this user to a team if they have the group cn=Administrators,ou=AAP,ou=example,o=com or cn=Operators,ou=AAP,ou=example,o=com.
* Never allow access to the system if the user has an attribute called disabled with a value of True, Yes or Until Further Notice.

Since maps are executed in order, it is possible to create exceptions. Expanding on the previous example for “Never allow access to the system if the user has an attribute called disabled with a value of True, Yes or Until Further Notice.

You can add another rule with a higher order, such as, “Allow access to the system for a disabled user if they are in the group Emergency Contacts.”

The first rule prevents the disabled user from accessing the system, but the second rule alters that decision to grant access to the system for the disabled user if they are in the Emergency Contacts group.

# Allow mapping

With allow mapping, you can control which users have access to the system by defining the conditions that must be met.

1. After configuring the authentication details for your authentication method, select Allow from the Add authentication mapping list.
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Authenticator map triggers for more information about map triggers.
4. Select Revoke to deny user access to the system when none of the trigger conditions are matched.
5. Click btn:[Next].
6. You can manage the authentication mappings order by dragging and dropping the mapping up or down in the list.

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
7. Click btn:[Next] to review and verify the mapping configurations.
8. Click btn:[Finish].

# Organization mapping

You can control which users are placed into which Ansible Automation Platform organizations based on attributes like their username and email address or based on groups provided from an authenticator.

When organization mapping is positively evaluated, a specified organization is created, if it does not exist if the authenticator tied to the map is allowed to create objects.

1. After configuring the authentication details for your authentication type, select Organization from the Add authentication mapping list.
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Authenticator map triggers for more information about map triggers.
4. Select Revoke to deny user access to the system when none of the trigger conditions are matched.
5. Select the Organization to which matching users are added or blocked.
6. Select a Role to be applied or removed for matching users (for example, Organization Admin or Organization Member).
7. Click btn:[Next].

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
8. Click btn:[Next] to review and verify the mapping configurations.
9. Click btn:[Finish].

# Team mapping

Team mapping is the mapping of team members (users) from authenticators.

You can define the options for each team’s membership. For each team, you can specify which users are automatically added as members of the team and also which users can administer the team.

Team mappings can be specified separately for each account authentication.

When Team mapping is positively evaluated, a specified team and its organization are created, if they don’t exist if the related authenticator is allowed to create objects.

1. After configuring the authentication details for your authentication type, select Team from the Add authentication mapping list.
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Authenticator map triggers for more information about map triggers.
4. Select Revoke to deny user access to the system when none of the trigger conditions are matched.
5. Select the Team and Organization to which matching users are added or blocked.
6. Select a Role to be applied or removed for matching users (for example, Team Admin or Team Member).
7. Click btn:[Next].

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
8. Click btn:[Next] to review and verify the mapping configurations.
9. Click btn:[Finish].

# Role mapping

Role mapping is the mapping of a user either to a global role, such as Platform Auditor, or team or organization role.

When a Team and/or Organization is specified together with the appropriate Role, the behavior is identical with Organization mapping or Team mapping.

Role mapping can be specified separately for each account authentication.

1. After configuring the authentication details for your authentication type, select Team from the Add authentication mapping list.
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Authenticator map triggers for more information about map triggers.
4. Select Revoke to remove the role for the user when none of the trigger conditions are matched.
5. Select a Role to be applied or removed for matching users.
6. Click btn:[Next].

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
7. Click btn:[Next] to review and verify the mapping configurations.
8. Click btn:[Finish].

# Superuser mapping

Role mapping is the mapping of a user either to a global role, such as Platform Auditor, or team or organization role.

When a Team and/or Organization is specified together with the appropriate Role, the behavior is identical with Organization mapping or Team mapping.

Role mapping can be specified separately for each account authentication.

1. After configuring the authentication details for your authentication type, select Team from the Add authentication mapping list.
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Authenticator map triggers for more information about map triggers.
4. Select Revoke to remove the superuser role from the user when none of the trigger conditions are matched.
5. Click btn:[Next].

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
6. Click btn:[Next] to review and verify the mapping configurations.
7. Click btn:[Finish].