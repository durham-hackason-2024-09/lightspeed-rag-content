# Configuring authentication in the Ansible Automation Platform

Using the authentication settings in Ansible Automation Platform, you can set up a simplified login through several authentication methods, such as LDAP and SAML
Depending on the authentication method you select, you will be required to enter different information to complete the configuration. Be sure to include all the information required for your configuration needs.

# Prerequisites

* A running installation of Ansible Automation Platform 2.5
* A running instance of your authentication source
* Administrator rights to the Ansible Automation Platform
* Any connection information needed to connect Ansible Automation Platform 2.5 to your source (see individual authentication types for details).

# Pluggable authentication

Authentication is the process of verifying a user&#8217;s identity to the Ansible Automation Platform (that is, to establish that a user is who they say they are). This can be done in a number of ways but would traditionally be associated with a username and password.

In Ansible Automation Platform 2.4, you could configure external authentication sources in automation controller. Ansible Automation Platform 2.5 uses a pluggable authentication system with a configuration wizard that provides a common, simplified method of configuring different types of authenticators such as LDAP and SAML. The pluggable system also allows you to configure multiple authenticators of the same type.

In the pluggable system we have a couple of concepts:

Authenticator Plugin:: A plugin allows Ansible Automation Platform to connect to a source system, such as, LDAP or SAML. Ansible Automation Platform includes a variety of authenticator plugins and more can be added. Authenticator plugins are similar to Ansible collections, in that all of the required code is in a package and can be versioned independently if needed.
Authenticator:: An authenticator is an instantiation of an authenticator plugin and allows users from the specified source to log in. For example, the LDAP authenticator plugin defines a required LDAP server setting. When you instantiate an authenticator from the LDAP authentication plugin you must provide the authenticator the LDAP server URL it needs to connect to.
Authenticator Map:: Authenticator maps are applied to authenticators and tell Ansible Automation Platform what permissions to give a user logging into the system.

## Creating an authentication method

The Create Authentication wizard guides you through the steps to create a new authentication method for your organization. The wizard is launched during the create authentication process.

There are 5 procedures involved in creating an authenticator, including:

1. Authentication type, where you will select the type of authenticator plugin you want to configure.
2. Authentication details, where you will configure the authentication details for the plugin you selected.
3. Mapping, where you will define mapping rule types and triggers to control access to the system.
4. Mapping order, where you can define the mapping precedence.

[NOTE]
----
Mapping order is only available if there are one or more authenticator maps defined.
----
5. Review, where you can review and confirm the authentication settings before creating the authentication method.

### Selecting an authentication type

On the first screen of the wizard you can select the type of authenticator plugin you want to configure.

1. From the navigation panel, select menu:Access Management[Authentication Methods].
2. Click btn:[Create authentication].

The Create Authentication wizard is displayed, where you can follow the prompts to configure your preferred authentication method.
3. Select the authenticator type from the Authentication type list. See Configuring an authentication type for the complete list of authentication plugins available.
4. Click btn:[Next] to Configure authentication details.

### Configuring authentication details

Different authenticator plugins require different types of information. See the respective sections in Configuring an authentication type for the required details.

For all authentication types you can enter a Name, Additional Authenticator Fields and Create Objects.

1. Enter a unique Name for the authenticator. The name is required, must be unique across all authenticators, and must not be longer than 512 characters. This becomes the unique identifier generated for the authenticator.

[NOTE]
----
Changing the name does not update the unique identifier of the authenticator. For example, if you create an authenticator with the name “My Authenticator” and later change it to “My LDAP Authenticator” you will not be able to create another authenticator with the name “My Authenticator” because the unique identifier is still in use.
----
2. Use the Additional Authenticator Fields to send arbitrary data back to the libraries behind the authenticators. This is an advanced feature and any values provided in this field are not validated.

[NOTE]
----
Values defined in this field override the dedicated fields provided in the UI. For example, if you enter a URL in a dedicated field on this page and then add a URL entry into the Additional Authentication Fields, the URL defined in Additional Authentication Fields overrides the definition in the dedicated field.
----
3. Enable or disable Create Object to specify whether the authenticator should create teams and organizations in the system when a user logs in.
Enabled:: Teams and organizations defined in the authenticator maps are created and the users added to them.
Disabled:: Organizations and teams defined in the authenticator maps will not be created automatically in the system. However, if they already exist (i.e. created by a superuser), users who trigger the maps are granted access to them.
4. Enable or disable Enabled to specify if the authenticator should be enabled or disabled. If enabled, users are able to login from the authenticator. If disabled, users will not be allowed to login from the authenticator.
5. Enable or disable Remove Users if enabled any access previously granted to a user is removed when they authenticate from this source. If disabled, permissions are only added or removed from the user based on the results of this authenticator's authenticator mappings.

For example, assume a user has been granted the is_superuser permission in the system. And that user will log into an authenticator whose maps will not formulate an opinion as to whether or not the user should be a superuser.
If Remove Users is enabled, the is_superuser permission will be removed from the user, the authenticator maps will not have an opinion as to whether it should be there or not so, after login the user will not have the is_superuser permission.

If Remove Users is disabled, the is_superuser permission will not be removed from the user, the authenticator maps will not have an opinion as to whether it should be there or not so after login the user will have the is_superuser permission.
6. Click btn:[Next] to Define authenticator mappings.

### Defining authentication mapping rules and triggers

Ansible Automation Platform supports the following rule types:

Allow:: Determine if the user is allowed to log into the system
Organization:: Determine if a user should be put into an organization
Team:: Determine if the user should be a member of a team
Role:: Determine if the user is a member of a role (for example System Auditor)
Is Superuser:: Determine if the user is a superuser in the system

These authentication map types can be used with any type of authenticator. Each map has a trigger that defines when the map should be evaluated as true. Trigger types include:

Always:: The trigger should always be fired.
Never:: The trigger should never be fired.
Group:: The trigger should fire based on a user having, not having or having multiple groups in the source system.
Attribute:: The trigger should fire based on a user having some combination of attributes from the source system whose value might match, contain, end with, etc. some value.

1. Click btn:[Add authentication mapping]: to see the list of available map types and select the map type you want to create. Options include:
* Allow
* Organization
* Team
* Role
* Superuser
2. Enter a unique rule Name to identify the rule.
3. Select a Trigger from the list. See Triggers for more details.
4. Repeat steps 1-3 to add additional triggers to the authenticator.
5. Click btn:[Next] to optionally Adjust the Mapping order.

[NOTE]
----
The mapping order setting is only available if there are one or more authenticator maps defined.
----

### Adjusting the Mapping order

If you have one or more authenticator maps defined, you can manage the order of the maps. Authenticator maps are run in order when logging in lowest order to highest. If one authenticator map determines a user should be a member of a team but a subsequent map determines the user should not be a member of the same team the ruling form the second map will take precedence over the result of the first map. Authenticator maps with the same order are executed in an undefined order.

For example, if the first authenticator map is of type is_superuser and the trigger is set to never, any user logging into the system would never be granted the is_superuser flag.

And, if the second map is of type is_superuser and the trigger is based on the user having a specific group, any user logging in would initially be denied the is_superuser permission. However, any user with the specified group would subsequently be granted the is_superuser permission by the second rule.

1. Adjust the mapping order by dragging and dropping the mappings up or down in the list using the draggable icon.

[NOTE]
----
The mapping precedence is determined by the order in which the mappings are listed.
----
2. After your authenticator maps are in the correct order, click btn:[Next] to Review the authentication settings.

### Reviewing the authentication settings

After you have defined the authentication details, configured the authentication maps, and specified the mapping order precedence, you can review and verify, or modify the settings before creating the authenticator.

1. Review and verify the authentication settings.
2. Click btn:[Finish] to create the authenticator.

A notification is displayed if there are any issues with the authenticator or the map. If you encounter issues, click btn:[Back] or select a wizard section from the wizard menu to go back and add missing data or correct inaccurate data.