# Red Hat Ansible Automation Platform components

Ansible Automation Platform is a modular platform composed of separate components that can be connected together to meet your deployment needs. Ansible Automation Platform deployments start with automation controller which is the enterprise framework for controlling, securing, and managing Ansible automation with a user interface (UI) and RESTful application programming interface (API). Then, you can add to your deployment any combination of the following automation platform components:

# Ansible automation hub

Ansible automation hub is a repository for certified content of Ansible Content Collections.
It is the centralized repository for Red Hat and its partners to publish content, and for customers to discover certified, supported Ansible Content Collections.
Red Hat Ansible Certified Content provides users with content that has been tested and is supported by Red Hat.

# Private automation hub

Private automation hub provides both disconnected and on-premise solutions for synchronizing content.
You can synchronize collections and execution environment images from Red Hat cloud automation hub, storing and serving your own custom automation collections and execution images.
You can also use other sources such as Ansible Galaxy or other container registries to provide content to your private automation hub.
Private automation hub can integrate into your enterprise directory and your CI/CD pipelines.

# High availability automation hub

A high availability (HA) configuration increases reliability and scalablility for automation hub deployments.

HA deployments of automation hub have multiple nodes that concurrently run the same service with a load balancer distributing workload (an "active-active" configuration).
This configuration eliminates single points of failure to minimize service downtime and allows you to easily add or remove nodes to meet workload demands.

# Event-Driven Ansible controller

The Event-Driven Ansible controller is the interface for event-driven automation and introduces automated resolution of IT requests. Event-Driven Ansible controller helps you connect to sources of events and act on those events by using rulebooks. This technology improves IT speed and agility, and enables consistency and resilience. With Event-Driven Ansible, you can:

* Automate decision making
* Use many event sources
* Implement event-driven automation within and across many IT use cases

* Getting Started with Event-Driven Ansible Guide.

# Automation mesh

Automation mesh is an overlay network intended to ease the distribution of work across a large and dispersed collection of workers through nodes that establish peer-to-peer connections with each other using existing networks.

Automation mesh provides:

* Dynamic cluster capacity that scales independently, allowing you to create, register, group, ungroup and deregister nodes with minimal downtime.
* Control and execution plane separation that enables you to scale playbook execution capacity independently from control plane capacity.
* Deployment choices that are resilient to latency, reconfigurable without outage, and that dynamically re-reroute to choose a different path when outages exist.
* Mesh routing changes.
* Connectivity that includes bi-directional, multi-hopped mesh communication possibilities which are Federal Information Processing Standards (FIPS) compliant.

# Automation execution environments

Automation execution environments are container images on which all automation in Red Hat Ansible Automation Platform is run. They provide a solution that includes the Ansible execution engine and hundreds of modules that help users automate all aspects of IT environments and processes.
Automation execution environments automate commonly used operating systems, infrastructure platforms, network devices, and clouds.

# Ansible Galaxy

Ansible Galaxy is a hub for finding, reusing, and sharing Ansible content.
Community-provided Galaxy content, in the form of prepackaged roles, can help start automation projects. Roles for provisioning infrastructure, deploying applications, and completing other tasks can be dropped into Ansible Playbooks and be applied immediately to customer environments.

# Automation content navigator

Automation content navigator is a textual user interface (TUI) that becomes the primary command line interface into the automation platform, covering use cases from content building, running automation locally in an execution environment, running automation in Ansible Automation Platform, and providing the foundation for future integrated development environments (IDEs).